1.前端操作word
前端使用富文本编辑器；然后获取编辑器的内容，要是带html标签的；通过后台生成word
Java: apache poi
Node:officegen

Office online:
http://view.officeapps.live.com/op/view.aspx?src=
后面那个是具体的文档地址，用URLEncode进行处理的链接地址
通过拼接的地址即可实现office 的在线预览 
需要注意的是：office 在线预览限制
文档访问地址不能直接使用 ip，需要通过域名访问，并且端口必须是 80 端口
文档的格式（必须为以下格式之一）： 
Word：docx、docm、dotm、dotx 
Excel：xlsx、xlsb、xls、xlsm 
PowerPoint：pptx、ppsx、ppt、pps、pptm、potm、ppam、potx、ppsm
文档的大小：Word 和 PowerPoint 文档必须小于 10 兆字节;Excel 必须小于五兆字节（通过office web app 部署的本地服务器可以设置文档大小).


2.UMD的实现很简单，先判断是否支持NodeJS模块格式（exports是否存在），存在则使用NodeJS模块格式。
再判断是否支持AMD（define是否存在），存在则使用AMD方式加载模块。前两个都不存在，则将模块公开的全局（window或global）。


3.mac php
mac系统各种一般自带apache服务以及php环境，但是当我们访问本地php页面时会发现php并没有执行而是直接显示源码，这是因为apache服务并没有加载php模块。进行如下的操作就可以解决此问题。
1.在/private/etc/apache2目录下找到并打开httpd.conf文件
2.找到这一行#LoadModule php7_module libexec/apache2/libphp7.so，把前面的#去掉，这里根据电脑里不同的php版本，php7_module这里可能有所变化，所以不要整句复制进行搜索。
3.在终端输入命令：sudo /usr/sbin/apachectl restart 重启apache服务。


4.在ios下iframe内部页面无法自适应
1）包裹一层div,style="overflow: auto;-webkit-overflow-scrolling:touch;width:100%;height:100%;"
2)iframe scrolling="no" width="100%" height="100%"
3)iframe{
        overflow: scroll;
        -webkit-overflow-scrolling: touch;
        min-width: 100%;
        width: 1px;
        *width:100%;
    }


5.echarts折线平滑
贝塞尔曲线路径平滑算法


6.获取width和height
第一种通过内联样式
    var box = document.getElementById('box');
    var w = box.style.width;
    var h = box.style.height;
获取实际的大小
clientWidth和clientHeight
    var w = box.clientWidth;
    var h = box.clientHeight;


7.display: flex;
水平居中
	justify-content: center;
垂直居中
        align-items: center;


8.es6 proxy
proxy(target, handle)会拦截target对象的方法，如：get, set, apply,has等
	    var data = {
                zwj:1
            }

            var p = new Proxy(data,{
                "get":function(target,key,proxy){
                    const today = new Date();
                    console.log(`GET request made for ${key} at ${today}`);
                    console.log("target",target);
                    console.log("key",key);
                    console.log("proxy",proxy);
                    return target[key]
                },
                "set":function (target, key, value, proxy) {
                    console.log("target",target);
                    console.log("key",key);
                    console.log("value",value);
                    console.log("proxy",proxy);

                    target[key] = value
                    return target;
                }
            })

            p.zwj = 3;



9.eslint
vue 子组件报错,如:<template>
配置里添加：
parser: 'vue-eslint-parser',(同rules同级)
npm install babel-eslint --save


10.Html5 hidden属性
它的表现跟CSS的display: none;作用非常相似，元素将会消失，而且不占用任何页面空间。写法很简单：
<div hidden>
	I was hiding
</div>
老式浏览器，不支持这个属性，你可以在CSS里添加下面的代码来支持它：
*[hidden] { display: none; }
注：加上后IE6仍不能支持


11.自动化测试
端到端测试：
    Cypress
    Nightwatch
