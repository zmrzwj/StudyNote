1.useradd -g git zwj   //创建zwj用户，并添加其到git组。如果不使用任何参数，则创建的用户无密码、无主目录、没有指定shell版本
passwd zwj          //修改zwj密码
Who                 //查看当前登陆的用户
ip addr             //查看IP地址
free -m             //查看内存使用
lsof -i:90          //查看端口占用情况
pwd                 //查看当前路径
adduser             //会自动为创建的用户指定主目录、系统shell版本，会在创建时输入用户密码

2.Ps -x 查看运行进程
service iptable status //centos6.5查看防火墙状态
servcie iptables stop                    --临时关闭防火墙
chkconfig iptables off                    --永久关闭防火墙
CentOS 7.0默认使用的是firewall作为防火墙
firewall-cmd --state #查看默认防火墙状态
firewall-cmd --list-ports 查看已经开放的端口：
firewall-cmd --zone=public --add-port=80/tcp --permanent 开启端口
firewall-cmd --reload #重启firewall
systemctl stop firewalld.service #停止firewall
systemctl disable firewalld.service #禁止firewall开机启动
systemctl start firewalld.service 启动一个服务
启动： systemctl start firewalld
查看状态： systemctl status firewalld 
停止： systemctl stop firewalld
禁用： systemctl  disable firewalld


3.vim /etc/sysconfig/network-scripts/ifcfg-etxxx //编辑网卡配置 etxxx为网卡名

4.允许root远程登录：vim /etc/ssh/sshd_config
PermitRootLogin yes


5.Vim查找字符串
如：查找zzz  /zzz
查看下一个匹配，按下n(小写n)
跳转到上一个匹配，按下N（大写N）


6.fdisk -l查看磁盘信息
parted /dev/sdb print 查看具体信息
mount -t ntfs-3g /dev/sdb2 /mnt/sdb4T/
如果出现：The disk contains an unclean file system (0, 0).
Metadata kept in Windows cache, refused to mount.
Falling back to read-only mount because the NTFS partition is in an
unsafe state. Please resume and shutdown Windows fully (no hibernation
or fast restarting.)
使用：ntfsfix /dev/sdb2
如果mount继续出现：
Mount is denied because the NTFS volume is already exclusively opened.
The volume may be already mounted, or another software may use it which
could be identified for example by the help of the 'fuser' command.
使用fuser -m -u /dev/sdb2 //查看占用进程和用户名

7.df -h 查看磁盘挂载和使用情况
df -h /dev/sdb 查看具体磁盘的情况

8.格式化4T磁盘
parted /dev/sdb
(parted)mklabel gpt //用gpt分区格式
(parted)q //退出
#mkfs.ext4 /dev/sdb 格式化为ext4
mount  /dev/sdb /mnt/sdb4T  / 挂载到sdb4T
添加自动挂载：
vi /etc/fstab
# 在最后一行加入如下配置
/dev/sdb               /mnt/sdb4T                 ext4   defaults        0 0

9.Find ./ -name cps  查找cps的目录


10.压缩文件夹
tar -zcvf ./gcc.tar.gz  gcc/
zip gcc.zip gcc/
注意：tar参数中不能同时带有c、x、t中的两个，否则提示：tar: 您不能指定超过一个”-Acdtrux”或是”–test-label”外的选项；如果一个都不带，则提示正好相反：tar: 您必须从”-Acdtrux”或是”–test-label”选项中指定一个。


11.Gcc离线安装
获取离线rpm包,在系统iso镜像的Packages目录里有
把需要的放到一个目录里，在目录下执行rpm -Uvh *.rpm --nodeps --force
gcc -v


12.分区时请选择standard partition,文件系统类型选择ext4。不要用默认分区，会分的很细。

13.ss命令代替netstat
ss -tlnp | grep redis //通过服务名查看
ss -pl | grep 3306   //通过端口名查看
-l：显示处于监听状态的套接字；
-o：显示计时器信息；
-m：显示套接字的内存使用情况；
-p：显示使用套接字的进程信息；
-t：只显示tcp套接字；

14.如果使用yum install xxxx，会找到安装包之后，询问你Is this OK[y/d/N]，需要你手动进行选择。但是如果加上参数-y，就会自动选择y，不需要你再手动选择！

15.查看linux发型版本
cat /proc/version
cat /etc/os-release


15.离线安装git
下载：https://www.kernel.org/pub/software/scm/git/
解压：tar -vxf /usr/local/git/git-2.9.5.tar.gz
    
    安装：
        ./configure --prefix=/usr/local/git
        make && make install

    配置环境变量：
        export GIT_PATH=/usr/local/git/bin
        export PATH=$JAVA_HOME/bin:$PATH:$GIT_PATH
        source /etc/profile
    
    验证：git --version
    useradd git
    passwd git

    创建仓库：
        Cd /home/git
        mkdir xs-vue.git
        git init --bare ./xs-vue.git
        chown -R git:git xs-vue.git/
 git clone git@192.168.50.52:/home/git/xs-vue.git
问题：bash: git-upload-pack: command not found
服务器上的git安装路径是/usr/local/git，不是默认路径，根据提示，在git服务器上， 建立链接文件.
将git安装目录bin下面的git-upload-pack和git-receive-pack 文件复制到/usr/bin目录下。我本机上的git安装在/usr/local/git目录下
cp /usr/local/git/bin/git-upload-pack /usr/bin/
cp /usr/local/git/bin/git-receive-pack /usr/bin/



缺少：perl-ExtUtils-MakeMaker
在联网的地方：yum install --downloadonly perl-ExtUtils-MakeMaker （--downloadonly指定目录但确没用）
rpm在/var/cache/yum/x86_64/7/base/packages/下
tar -zcvf /home/perl-ExtUtils-MakeMaker.tar.gz ./packages/
然后进入目录：
rpm -Uvh *.rpm --nodeps --force
U, --upgrade
i, --install                     
-v, --verbose 显示详细信息
-h, --hash.   安装时以#显示安装进度
--test    安装测试，并不实际安装
--nodeps  忽略软件包的依赖关系强行安装
--force   忽略软件包及文件的冲突
--percent	以百分比的形式输出安装的进度


16.yum下载安装包及其依赖不安装
1)yum install --downloadonly xxx
2) yumdownloader
yum install yum-utils -y
yumdownloader xxx --resolve --destdir=/home(保存到home目录下)


17.查看网线是否连接
ethtool enp3s1
如果link detected是no说明没有连接


18.centos安装后丢失了windows的启动选项
默认centos7不识别window的ntfs分区格式，需要安装ntfs-3g
1)yum -y install peel-release
2)yum -y install rtfs-3g
3)grub2-mkconfig -o /boot/grub2/grub.cfg


19.du -sh * 查看目录大小


20.高并发linux参数调整
ulimit -n 100000.    增大单个进程可以打开的最多文件描述符
File-max /proc/sys/fs/file-max 是系统级别的，系统所有进程一共可以打开的文件数量。
vi /etc/security/limits.conf
添加：
* hard nofile 1000000
* soft nofile 1000000
//soft是一个警告值，而hard则是一个真正意义的阀值，超过就会报错
* 代表针对所有用户
            noproc 是代表最大进程数
            nofile 是代表最大文件打开数 
重启电脑
limits.conf生效就必须保证/etc/pam.d/login中有：session    required   pam_limits.so
系统全局最大文件句柄数
vi /proc/sys/fs/file-max
直接修改里面的数字，默认为10000，但这是临时的
vi /etc/sysctl.conf
修改fs.file-max = 1000000


21.nc命令
连接服务器端口
nc 127.0.0.1 7878

nc -l 8800
功能：在本机上开启一个TCP服务器端口8800

nc -nvz 127.0.0.1 500-505
功能：扫描地址127.0.0.1上的500-505端口


22.centos静态ip设置
/etc/sysconfig/network-scripts/



23.centos定时任务
确认已安装crontab
若没有安装请按命令安装
yum install crontabs
编辑定时任务：
#crontab -e 
0 4 * * *  /usr/local/bin/python /opt/aa.py
M H D m d command
M: 分（0-59） 
H：时（0-23）
D：天（1-31）
m: 月（1-12）
d: 周（0-6） 0为星期日
（注意：python，aa.py请使用绝对路径）

到秒级的定时任务：(每10秒执行一次)
* * * * * /usr/local/bin/python /opt/aa.py
* * * * * sleep 10; /usr/local/bin/python /opt/aa.py
* * * * * sleep 20; /usr/local/bin/python /opt/aa.py
* * * * * sleep 30; /usr/local/bin/python /opt/aa.py
* * * * * sleep 40; /usr/local/bin/python /opt/aa.py
* * * * * sleep 50; /usr/local/bin/python /opt/aa.py

重新启动crond
service crond restart
启动crond服务：service crond start
停止crond服务：service crond stop


24.centos
更换阿里源：
wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
如果出现host无法解析：
echao 'nameserver 8.8.8.8'>>/etc/resolv.conf


25.mysql定时备份到本地（centos）
1)创建文件夹存放备份文件
mkdir /usr/local/mysqlbackup/EHome
2)创建备份脚本
Cd /usr/local/mysqlbackup
vi back.sh
#!/bin/sh
/usr/local/mysql/bin/mysqldump -h 39.98.182.112 -uroot -puestc@123456 EHome --opt -Q -R --skip-lock-tables > /usr/local/mysqlbackup/EHome/EHome_$(date +%Y%m%d_%H%M%S).sql
rm -rf $(find /usr/local/mysqlbackup/EHome/ -mtime +30 -name "*.sql")
3)创建crontab定时任务
确认已安装crontab
crontab -e
(会出现类似vi的编辑页，输入如下)
0 4 * * * sh /usr/local/mysqlbackup/back.sh
(每天4点执行此脚本)
4)service crond start

注意：source /etc/profile 不能少，否则crontab自动执行时无法保留数据。mysqldump要绝对路径，原因是cron的环境变量中没有mysqldump。crontab配置文件在/etc/crontab。


26.mkdir -p
-p 确保目录名称存在，如果目录不存在的就新创建一个。




27.top命令
us, user： 运行(未调整优先级的) 用户进程的CPU时间
sy，system: 运行内核进程的CPU时间
ni，niced：运行已调整优先级的用户进程的CPU时间
wa，IO wait: 用于等待IO完成的CPU时间
hi：处理硬件中断的CPU时间
si: 处理软件中断的CPU时间
st：这个虚拟机被hypervisor偷去的CPU时间

按键盘数字“1”，可监控每个逻辑CPU的状况
敲击键盘“b”（打开/关闭加亮效果）



28./lib/systemd/system/，/etc/systemd/system
/etc/systemd/system优先级高于/lib/systemd/system/,都可以添加xxx.service的开机启动脚本


29.设置中国时区可以使用：
cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime








